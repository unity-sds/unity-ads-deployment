# This file can update the JupyterHub Helm chart's default configuration values.
#
# For reference see the configuration reference and default values, but make
# sure to refer to the Helm chart version of interest to you!
#
# Introduction to YAML:     https://www.youtube.com/watch?v=cdLNKUoMc6c
# Chart config reference:   https://zero-to-jupyterhub.readthedocs.io/en/stable/resources/reference.html
# Chart default values:     https://github.com/jupyterhub/zero-to-jupyterhub-k8s/blob/HEAD/jupyterhub/values.yaml
# Available chart versions: https://jupyterhub.github.io/helm-chart/

debug:
  enabled: false
singleuser:
  defaultUrl: "/lab"
  extraEnv:
    JUPYTERHUB_SINGLEUSER_APP: "jupyter_server.serverapp.ServerApp"
  # Defines the default image
  image:
    name: jupyter/base-notebook
    tag: latest
  profileList:
    - display_name: "Unity - Datascience Environment (v0.2.4)"
      description: "Extends Jupyter datascience environment to include the Dockstore client and AWS client"
      kubespawner_override:
        image: ghcr.io/unity-sds/unity-docker-stacks/unity_datascience:0.2.4
      default: true
    - display_name: "VTLS Development (v0.2.5)"
      description: "Development environment for the VTLS team"
      kubespawner_override:
        image: ghcr.io/unity-sds/unity-docker-stacks/vtls_dev:0.2.5
    - display_name: "Jupyter - Minimal environment"
      description: "To avoid too much bells and whistles: Python."
      kubespawner_override:
        image: jupyter/base-notebook:latest
  storage:
    # Use our storage class for dynamic user volumes allow application of cost tags
    dynamic:
      storageClass: ebs
    extraVolumes:
      - name: ${shared_volume_name}
        persistentVolumeClaim:
          claimName: ${shared_volume_name}
    extraVolumeMounts:
      - name: ${shared_volume_name}
        mountPath: /unity/ads
  lifecycleHooks:
    postStart:
      exec:
        # Populate user environment with configuration files, but do not overwrite existing
        command: ["sh", "-c", "if [ -e /etc/unity-sds/init_user.sh ]; then /etc/unity-sds/init_user.sh ; fi"]
  cloudMetadata:
    blockWithIptables: false
    ip: 169.254.169.254
  serviceAccountName: s3-access
hub:
  # Use our storage class for hub database to allow application of cost tags
  db:
    pvc: 
      storageClassName: ebs
  baseUrl: ${jupyter_base_path}
  extraFiles:
    unity_auth:
      mountPath: /usr/local/etc/jupyterhub/jupyterhub_config.d/unity_auth.py
      binaryData: ${unity_auth_py}
  config:
    Authenticator:
      auto_login: true
    OAuthenticator:
      oauth_callback_url: ${oauth_callback_url}
      client_id: ${oauth_client_id}
      client_secret: ${oauth_client_secret}
      admin_users: ${admin_users}
    UnityOAuthenticator:
      username_key: username
      authorize_url: ${cognito_oauth_base_url}/oauth2/authorize
      token_url: ${cognito_oauth_base_url}/oauth2/token
      userdata_url: ${cognito_oauth_base_url}/oauth2/userInfo
      allow_all: True
    JupyterHub:
      authenticator_class: UnityOAuthenticator
proxy:
  service:
    type: NodePort
    nodePorts:
      http: ${jupyter_proxy_port}
